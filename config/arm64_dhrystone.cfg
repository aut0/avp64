##############################################################################
#                                                                            #
# Copyright 2020 Lukas JÃ¼nger                                                #
#                                                                            #
# This software is licensed under the MIT license.                           #
# A copy of the license can be found in the LICENSE file at the root         #
# of the source tree.                                                        #
#                                                                            #
##############################################################################

### Simulation TCP port summary ##############################################

# system.uart0 -> 51010 (raw binary)
# system.uart1 -> 51011 (raw binary)
# system.uart2 -> 51012 (raw binary)
# system.uart3 -> 51013 (raw binary)
# system.arm0  -> 51111 (GDB RSP)

### General configuration ####################################################
system.name   = avp64
system.desc   = Runs the dhrystone benchmark on a single-core aarch64 CPU
system.config = $cfg

# Specify the system to construct.
system.type = arm64

# Specify the number of processors to instantiate in the simulation. Maximum
# allowed is 32. Override this on command line using -c system.nrcpus=X.
system.nrcpu = 1

# Specify simulation duration. Simulation will stop automatically once this
# time-stamp is reached. Use integer values with suffixes s, ms, us or ns. If
# you want to simulate infinitely, leave this commented out.
#  system.duration = 2s

# TLM global quantum, a higher value improves performance but reduces timing
# accuracy. Use integer values with suffixes s, ms, us or ns.
system.quantum = 10us

# Clock frequency
system.clock = 1000000000 # 1 GHz

### CPU configuration ########################################################

system.arm0.gdb_port      = 52100
system.arm0.gdb_wait      = 0 # (0) start core immediately; (1) wait for gdb

### Physical Address Map #####################################################

system.addr_ram        = 0x00000000 0x0fffffff
system.addr_hwrng      = 0x10007000 0x10007fff
system.addr_simdev     = 0x10008000 0x10008fff
system.addr_uart0      = 0x10009000 0x10009fff
system.addr_uart1      = 0x1000a000 0x1000afff
system.addr_uart2      = 0x1000b000 0x1000bfff
system.addr_uart3      = 0x1000c000 0x1000cfff
system.addr_ethoc      = 0x1000d000 0x1000efff
system.addr_sdhci      = 0x1000f000 0x1000ffff
system.addr_gic_distif = 0x10140000 0x10140fff
system.addr_gic_cpuif  = 0x10141000 0x10142fff
system.addr_gic_vifctrl= 0x10143000 0x10144fff
system.addr_gic_vcpuif = 0x10145000 0x10146fff

### Interrupt Map ############################################################

system.irq_uart0  = 12
system.irq_uart1  = 13
system.irq_uart2  = 14
system.irq_uart3  = 15

### Memory and IO peripherals configuration ##################################

# Memory configuration
system.ram.size   = 0x10000000    # 256MB
system.ram.images = $dir/../sw/arm64/dhrystone/dhrystone.bin      @ 0x00000000;

# UART configuration
system.uart0.backends      = term tcp:51010   # stdout|file|tap|null
system.uart1.backends      = stdout tcp:51011 # term|file|tap|null
system.uart2.backends      = stdout tcp:51012 # term|file|tap|null
system.uart3.backends      = stdout tcp:51013 # term|file|tap|null

# ETHOC configuration
system.ethoc.mac = 3a:44:1d:55:11:5a
system.ethoc.backends = tap:0
